// common include
var degree = Math.PI/180;


// input parameters
var theta = 30*degree; // acceptance angle (from zenith)
var rR = 0.5; // receiver radius (inscribed)
var k = 6; // number of sides


// auxiliary parameters
var f = rR*(1 + Math.sin(theta)); // focal distance
// print("f = " + f);

var x0 = f*Math.sin(theta) - rR; // center of parabola
var z0 = -f*Math.cos(theta);

var uMin = 2*rR*Math.cos(theta); // profile of parabola
var uMax = 2*f/Math.tan(theta);

var rA = rR/Math.sin(theta); // aperture radius (inscribed)
var phi = 360*degree/k;
var vMaxR = rR*Math.tan(phi/2);
var vMaxA = rA*Math.tan(phi/2);

var zA = (rR + rA)/Math.tan(theta); // aperture height (from receiver)
var tR = 0.01*rR; // receiver thickness

var cr = Math.pow(Math.sin(theta), -2); // concentration ratio (estimated)

// shapes 
function makeSide(parent)
{
	var node = parent.createNode("Inner");
	node.setParameter("translation", "" + x0 + " 0 " + z0);
	node.setParameter("rotation", "0 -1 0 " + theta/degree);
	var s = node.createShape();
	var q = s.insertSurface("Parabolic");
	q.setParameter("fX", f);
	q.setParameter("fY", 1e6);
	var p = s.insertProfile("Rectangular");
	p.setParameter("uMin", uMin); 
	p.setParameter("uMax", uMax);
	p.setParameter("vMin", -vMaxA);
	p.setParameter("vMax", vMaxA);
	var m = s.insertMaterial("Specular");
	m.setParameter("slope", "0.002");
	m.setParameter("reflectivity", "0.95");
	var mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.3 0.4 0.5");
	mG.setParameter("diffuseColor", "0.3 0.3 0.3");
	mG.setParameter("specularColor", "0.1 0.1 0.1");
	mG.setParameter("shininess", "0.5");
	
	var node = parent.createNode("Outer");
	node.setParameter("translation", "" + rA + " 0 " + zA);
	node.setParameter("rotation", "0 1 0  90");
	var s = node.createShape();
	var q = s.insertSurface("Planar");
	var p = s.insertProfile("Rectangular");
	p.setParameter("uMin", 0); 
	p.setParameter("uMax", zA + tR);
	p.setParameter("vMin", -vMaxA);
	p.setParameter("vMax", vMaxA);
	var mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.5 0.5 0.5");
	mG.setParameter("diffuseColor", "0.5 0.5 0.5");
	mG.setParameter("reverseNormals", "TRUE");
}

function makeCPC(parent)
{
	var nodeCPC = parent.createNode();
	for (var i = 0; i < k; i++)
	{
		var nodeSide = nodeCPC.createNode("Side-" + i);
		nodeSide.setParameter("rotation", "0 0 1 " + (i*phi/degree - 90));
		makeSide(nodeSide);
	}

	var nodeAbsorber = nodeCPC.createNode("Absorber");
	var s = nodeAbsorber.createShape();
	var q = s.insertSurface("Planar");
	var p = s.insertProfile("Regular");
	p.setParameter("n", k);
	p.setParameter("r", rR/Math.cos(phi/2));
	var mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.5 0.5 0.5");
	mG.setParameter("diffuseColor", "0.2 0.2 0.2");
	
	var nodeCap = nodeCPC.createNode("Cap");
	nodeCap.setParameter("translation", "0 0 " + (-tR));
	var s = nodeCap.createShape();
	var q = s.insertSurface("Planar");
	var p = s.insertProfile("Regular");
	p.setParameter("n", k);
	p.setParameter("r", rA/Math.cos(phi/2));
	var mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.5 0.5 0.5");
	mG.setParameter("diffuseColor", "0.5 0.5 0.5");

	return nodeCPC;
}

var nodeRoot = NodeObject();
nodeRoot.setName("Script");
var nodeCPC = makeCPC(nodeRoot);
nodeCPC.setName("CPC");
tn.Clear();
tn.InsertScene(nodeRoot);


// world
var scene = NodeObject().getScene();

var sun = scene.getPart("world.sun");
sun.setParameter("shape", "Pillbox");
var sp = sun.getPart("position");
sp.setParameter("azimuth", 180);
sp.setParameter("elevation", 80);

var cm = scene.getPart("world.camera");
cm.setParameter("position", "0 -8.67789 10.9807");
cm.setParameter("rotation", "0 -50");

var tg = scene.getPart("world.terrain.grid");
//tg.setParameter("fill", "FALSE");
tg.setParameter("min", "-10 -10 0");
tg.setParameter("max", "10 10 0");

