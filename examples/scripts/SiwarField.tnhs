var file = FileObject();
file.readCSV("../examples/scripts/heliostats.csv");


function makeHeliostat(parent, name, position, aiming, focus)
{
	var nm = parent.createNode(name);
	nm.setParameter("translation", position);
	nm.setParameter("rotation", "0 0 1 3.14159");

	var t = nm.createTracker();
	var ta = t.insertArmature("two-axes");
	ta.setParameter("primaryShift", "0 0.04 1.5");
	ta.setParameter("primaryAxis", "1 0 0");
	ta.setParameter("primaryAngles", "-90 90");
	ta.setParameter("secondaryShift", "0 0.175 0");
	ta.setParameter("secondaryAxis", "0 0 1");
	ta.setParameter("secondaryAngles", "-90 90");
	ta.setParameter("facetShift", "0 0.125 0");
	ta.setParameter("facetNormal", "0 1 0");
	var tt = t.getPart("target");
	tt.setParameter("aimingFrame", "global");
	tt.setParameter("aimingPoint", aiming);
						
	var n = nm.createNode("primary");
	n = n.createNode("secondary");
	n = n.createNode("facet");
	n.setParameter("translation", "0 0.125 0");
	n.setParameter("rotation", "1 0 0 -1.57080");
	
	var s = n.createShape();

	var q = s.insertSurface("Parabolic");
	q.setParameter("fX", focus);
	q.setParameter("fY", focus);

	var p = s.insertProfile("Box");
	p.setParameter("uSize", 2.25);
	p.setParameter("vSize", 2.25);

	var m = s.insertMaterial("Specular");
	m.setParameter("slope", "0.002");
	
	var mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.65 0.72 0.79");
	mG.setParameter("diffuseColor", "0.05 0.05 0.05");
	mG.setParameter("specularColor", "0.3 0.25 0.2");
	mG.setParameter("shininess", "0.5");
	
	// pylon
	n = nm.createNode("pylon");
	n.setParameter("scaleFactor", "0.05 0.05 1");
	s = n.createShape();
	m = s.insertMaterial("Transparent");
	q = s.insertSurface("Cylinder");
	p = s.insertProfile("Rectangular");
	p.setParameter("vMin", 0.);
	p.setParameter("vMax", 1.5);
}

function makeTowerMaterial(shape)
{
	var mG = shape.getPart("material");
	mG.setParameter("ambientColor", "0.47 0.5 0.47");
	mG.setParameter("diffuseColor", "0.45 0.45 0.45");
}

function makeTower(nT, xSize, ySize, zSize, zWindow)
{
	n = nT.createNode("North");
	n.setParameter("translation", "0 0 0");
	n.setParameter("rotation", "1 0 0 -1.5708");
	s = n.createShape();
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", -xSize/2);
	p.setParameter("uMax", xSize/2);
	p.setParameter("vMin", -(zSize - zWindow));
	p.setParameter("vMax", 0);
	makeTowerMaterial(s);
	
	n = nT.createNode("South");
	n.setParameter("translation", "0 " + (-ySize) + " 0");
	n.setParameter("rotation", "1 0 0 1.5708");
	s = n.createShape();
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", -xSize/2);
	p.setParameter("uMax", xSize/2);
	p.setParameter("vMin", 0);
	p.setParameter("vMax", zSize);
	makeTowerMaterial(s);

	n = nT.createNode("Top");
	n.setParameter("translation", "0 0 " + zSize);
	s = n.createShape();
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", -xSize/2);
	p.setParameter("uMax", xSize/2);
	p.setParameter("vMin", -ySize);
	p.setParameter("vMax", 0);
	makeTowerMaterial(s);
	
	n = nT.createNode("Floor");
	n.setParameter("translation", "0 0 " + (zSize - zWindow));
	s = n.createShape();
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", -xSize/2);
	p.setParameter("uMax", xSize/2);
	p.setParameter("vMin", -ySize);
	p.setParameter("vMax", 0);
	makeTowerMaterial(s);
	
	n = nT.createNode("East");
	n.setParameter("translation", "" + (xSize/2) + " 0 0");
	n.setParameter("rotation", "0 1 0 1.5708");
	s = n.createShape();
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", -zSize);
	p.setParameter("uMax", 0);
	p.setParameter("vMin", -ySize);
	p.setParameter("vMax", 0);
	makeTowerMaterial(s);
	
	n = nT.createNode("West");
	n.setParameter("translation", "" + (-xSize/2) + " 0 0");
	n.setParameter("rotation", "0 1 0 -1.5708");
	s = n.createShape();
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", 0);
	p.setParameter("uMax", zSize);
	p.setParameter("vMin", -ySize);
	p.setParameter("vMax", 0);
	makeTowerMaterial(s);
}

function findFocalDistance(pA, pB)
{
	vA = pA.split(' ');
	vB = pB.split(' ');
	dx = vA[0] - vB[0];
	dy = vA[1] - vB[1];
	dz = vA[2] - vB[2];
	d = Math.sqrt(dx*dx + dy*dy + dz*dz);
	return 5*Math.round(d/5);
}

function makeField()
{
	tn.Clear();
	var nodeRoot = NodeObject();
	nodeRoot.setName("Script");

	var nodeHeliostats = nodeRoot.createNode("Heliostats");
	nodeHeliostats.setParameter("translation", "0 0 -1.5");

	var nMax = file.rows();
	for (var n = 0; n < nMax; n++) {
		name = file.part(n, 0);
		position = file.part(n, 1);
		//focus = file.part(n, 2);
		focus = findFocalDistance(position, vRec);
		makeHeliostat(nodeHeliostats, name, position, vRec, focus);
	}

	n = nodeRoot.createNode("Ground");
	n.setParameter("translation", "0 0 -0.1");
	s = n.createShape();
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", -70);
	p.setParameter("uMax", 70);
	p.setParameter("vMin", -20);
	p.setParameter("vMax", 100);
	m = s.insertMaterial("Transparent");
	mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.85 0.85 0.8");	
	mG.setParameter("diffuseColor", "0.05 0.05 0.05");

	var nT = nodeRoot.createNode("Tower");
	nT.setParameter("translation", "0 0 0");
	nT.setParameter("rotation", "0 0 1  0.087298729");
	makeTower(nT, 6, 6, zReceiver + 5, 10);

	var nR = nodeRoot.createNode("Receiver");
	nR.setParameter("translation", vRec);
	nR.setParameter("rotation", "-1 0 0  1.9207998");
	var n = nR.createNode("Plate");
	n.setParameter("rotation", "0 0 1 3.14159");
	s = n.createShape();
	s.setName("Shape")
	q = s.insertSurface("Planar");
	p = s.insertProfile("Box");
	p.setParameter("uSize", 5);
	p.setParameter("vSize", 5);

	tn.InsertScene(nodeRoot);
	tn.ChangeSunPosition(180., 90 - 11.27182); 
	tn.SetSunParameter("aperture.disabledNodes", "//Node/Script/Ground");
}


var zReceiver = 25;
var vRec = "0.0467 -2.0216 " + zReceiver;

tn.Clear();
makeField();
