function makeNode(path, name)
{
	tn.Select(path);
	tn.InsertNode();
	tn.Select(path +"/Node");  
	tn.SetName(name); 
	return path + "/" + name;
}

function makeShape(path, name)
{
	tn.Select(path);
	tn.InsertShape(); 
	tn.Select(path +"/Shape");  
	tn.SetName(name); 	
	return path + "/" + name;
}

function makeHeliostat(path, name, position)
{
	path = makeNode(path, name);
	tn.SetValue(path, "translation", position);

	temp = "Dual"
	tn.InsertTracker(temp);
	pathTemp = path + "/" + temp;
	tn.SetValue(pathTemp, "aimingPoint", "0 0 8");
	
	path = makeNode(path, "primary");
	path = makeNode(path, "secondary");
	path = makeNode(path, "facet");

	path = makeShape(path, "Shape");

	temp = "Parabolic"
	tn.InsertSurface(temp);
	pathTemp = path + "/" + temp;	
	tn.SetValue(pathTemp, "fX", focus);
	tn.SetValue(pathTemp, "fY", focus);
	
	temp = "Box"
	pathTemp = path + "/" + temp;	
	tn.SetValue(pathTemp, "uSize", 2);
	tn.SetValue(pathTemp, "vSize", 2);

	temp = "Specular"
	tn.InsertMaterial("Specular");
	pathTemp = path + "/" + temp;	
	tn.SetValue(pathTemp, "slope", 3);
}

var path;
path = "//Layout";

path = makeNode(path, "Receiver");
tn.SetValue(path, "translation", "0 0 8");
path = makeShape(path, "Shape");
path = path + "/Box"; 
tn.SetValue(path, "uSize", 3);
tn.SetValue(path, "vSize", 3);

path = "//Layout";
path = makeNode(path, "Heliostats");
count = 1;
for (i = -3; i <= 3; i++)
{
	for (j = -3; j <= 3; j++)
	{
		name = "H_" + count;
		position = "" + 5*i + " " + 5*j + " 0";
		focus = 10;
		makeHeliostat(path, name, position, focus);
		count++;
	}
}