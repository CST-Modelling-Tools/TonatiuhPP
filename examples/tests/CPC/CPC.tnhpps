// common include
var degree = Math.PI/180;


// input parameters
var theta = 30*degree; // acceptance angle (half)
var w = 0.5; // absorber radius (inner)
var n = 6; // number of sides
var useOversize = true; // fix stitching

// auxiliary parameters
var f = w*(1 + Math.sin(theta)); // focal distance

var x0 = f*Math.sin(theta) - w; // center of parabola
var z0 = -f*Math.cos(theta);

var uMin = 2*w*Math.cos(theta); // profile of parabola
var uMax = 2*f/Math.tan(theta);

var W = f/Math.sin(theta) - w; 
var phi = 360*degree/n;
var vA = w*Math.tan(phi/2);
var vB = W*Math.tan(phi/2);

// print("f = " + f);
if (useOversize) 
	vA = vB;

// shapes 
function makeSide(parent)
{
	var node = parent.createNode();
	node.setParameter("translation", "" + x0 + " 0 " + z0);
	node.setParameter("rotation", "0 -1 0 " + theta/degree);
	var s = node.createShape();
	var q = s.insertSurface("Parabolic");
	q.setParameter("fX", f);
	q.setParameter("fY", 1e6);
	var p = s.insertProfile("Polygon");
	p.setParameter("points", "[" + 
	uMin + " " + vA + ", " +
	uMax + " " + vB + ", " +
	uMax + " " + (-vB) + ", " +
	uMin + " " + (-vA) + 
	"]");
	var m = s.insertMaterial("Specular");
	m.setParameter("slope", "0.002");
	m.setParameter("reflectivity", "0.95");
}

var nodeRoot = NodeObject();
nodeRoot.setName("Script");

var nodeCPC = nodeRoot.createNode("CPC");
for (var i = 0; i < n; i++)
{
	var nodeSide = nodeCPC.createNode("Side-" + i);
	nodeSide.setParameter("rotation", "0 0 1 " + (i*phi/degree - phi/2*degree - 90));
	makeSide(nodeSide);
}

var nodeAbsorber = nodeCPC.createNode("Absorber");
//nodeAbsorber.setParameter("rotation", "0 0 1 " + 0*(phi/2/degree + 90));
var s = nodeAbsorber.createShape("Shape");
s.setName("Shape");
var q = s.insertSurface("Planar");
var p = s.insertProfile("Regular");
p.setParameter("n", n);
p.setParameter("r", w/Math.cos(phi/2));
var m = s.insertMaterial("Absorber");
var mG = s.getPart("material");
mG.setParameter("ambientColor", "0.5 0.5 0.5");	
mG.setParameter("diffuseColor", "0.3 0.3 0.3");
mG.setParameter("specularColor", "0. 0. 0.");
mG.setParameter("shininess", "0.1");

tn.Clear();
tn.InsertScene(nodeRoot);


// world
var scene = NodeObject().getScene();

var sun = scene.getPart("world.sun");
sun.setParameter("shape", "Pillbox");
var sp = sun.getPart("position");
sp.setParameter("azimuth", 0);
sp.setParameter("elevation", 90);

var cm = scene.getPart("world.camera");
cm.setParameter("position", "-12.8727 -27.9604 22.4849");
cm.setParameter("rotation", "25.0015 -34.8882");

var tg = scene.getPart("world.terrain.grid");
tg.setParameter("fill", "FALSE");
tg.setParameter("min", "-10 -10 0");
tg.setParameter("max", "10 10 0");

