var fileA = new DataObject;
fileA.read("heliostatsA.csv");

var fileB = new DataObject;
//fileB.read("heliostatsB0.csv"); // 0.280
fileB.read("heliostatsB.csv"); // 0.297

var fileW = new DataObject;
fileW.read("sampling.csv");

var rays = 5e2; // if rays <= 0 no simulations

// iteration points
var iterationsA = 0; 
var iterationsB = 23; 

// weather points
var weather0 = 11; // heading
var weatherA = weather0 + 1;
var weatherB = fileW.rows(); 
weatherA = weather0 + 25;// lines in sampling.csv
weatherB = weather0 + 38; 
	
function makeHeliostatA(parent, name, position, aiming, focus)
{
	var node = parent.createNode(name);
	node.setParameter("translation", position);
	node.setParameter("rotation", "0 0 1 180");

	var t = node.createTracker();
	t.setName("LF");
	t.setPart("armature", hLF);
	var tt = t.getPart("target");
	tt.setParameter("aimingPoint", aiming);
						
	var n = node.createNode("primary");
	n = n.createNode("secondary");
	n = n.createNode("facet");
	n.setParameter("translation", "0 0.125 0");
	n.setParameter("rotation", "1 0 0 -90");
	
	var s = n.createShape();

	var q = s.insertSurface("Parabolic");
	q.setParameter("fX", focus);
	q.setParameter("fY", focus);

	var p = s.insertProfile("Box");
	p.setParameter("uSize", 2.25);
	p.setParameter("vSize", 2.25);

	var m = s.insertMaterial("Transparent");
	m.setParameter("slope", "0.002");
	
	var g = s.getPart("material");
	g.setParameter("ambientColor", "0.65 0.72 0.79");
	g.setParameter("diffuseColor", "0.05 0.05 0.05");
	g.setParameter("specularColor", "0.3 0.25 0.2");
	g.setParameter("shininess", "0.5");
	
	// post
	n = node.createNode("post");
	n.setParameter("scale", "0.05 0.05 1");
	s = n.createShape();
	m = s.insertMaterial("Transparent");
	q = s.insertSurface("Cylinder");
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", 0);
	p.setParameter("uMax", "360d");
	p.setParameter("vMin", 0.);
	p.setParameter("vMax", 1.5);
	g = s.getPart("material");
	g.setParameter("ambientColor", "0.5 0.5 0.5");
	g.setParameter("diffuseColor", "0.3 0.3 0.3");
	g.setParameter("specularColor", "0.2 0.2 0.2");
	g.setParameter("shininess", "0.1");
}

var n = new NodeObject;
var t = n.createTracker();
var hLF = t.insertArmature("two-axes");
hLF.setParameter("primaryShift", "0 0.04 1.5");
hLF.setParameter("primaryAxis", "1 0 0");
hLF.setParameter("primaryAngles", "-90 90");
hLF.setParameter("secondaryShift", "0 0.175 0");
hLF.setParameter("secondaryAxis", "0 0 1");
hLF.setParameter("secondaryAngles", "-90 90");
hLF.setParameter("facetShift", "0 0.125 0");
hLF.setParameter("facetNormal", "0 1 0");

function makeHeliostatB(parent, name, position, aiming, focus)
{
	var node = parent.createNode(name);
	node.setParameter("translation", position);
	node.setParameter("rotation", "0 0 1 180");

	var t = node.createTracker();
	t.setName("BS");
	t.setPart("armature", hBS);
	var tt = t.getPart("target");
	tt.setParameter("aimingPoint", aiming);
						
	var n = node.createNode("primary");
	n = n.createNode("secondary");
	n = n.createNode("facet");
	n.setParameter("translation", "0 0.125 0");
	n.setParameter("rotation", "1 0 0 -90");
	
	var s = n.createShape();

	var q = s.insertSurface("Parabolic");
	q.setParameter("fX", focus);
	q.setParameter("fY", focus);

	var p = s.insertProfile("Box");
	p.setParameter("uSize", 6.);
	p.setParameter("vSize", 5.);

	var m = s.insertMaterial("Specular");
	m.setParameter("reflectivity", "0.4");
	m.setParameter("slope", "0.002");
	
	var g = s.getPart("material");
	g.setParameter("ambientColor", "0.77 0.1 0.96");
	g.setParameter("diffuseColor", "0.05 0.05 0.05");
	g.setParameter("specularColor", "0.3 0.25 0.2");
	g.setParameter("shininess", "0.5");
	
	// post
	n = node.createNode("post");
	n.setParameter("scale", "0.15 0.15 1");
	s = n.createShape();
	m = s.insertMaterial("Transparent");
	q = s.insertSurface("Cylinder");
	p = s.insertProfile("Rectangular");
	p.setParameter("uMin", 0);
	p.setParameter("uMax", "360d");
	p.setParameter("vMin", 0.);
	p.setParameter("vMax", 1.5);
	g = s.getPart("material");
	g.setParameter("ambientColor", "0.5 0.5 0.5");
	g.setParameter("diffuseColor", "0.3 0.3 0.3");
	g.setParameter("specularColor", "0.2 0.2 0.2");
	g.setParameter("shininess", "0.1");
}

var n = new NodeObject;
var t = n.createTracker();
var hBS = t.insertArmature("two-axes");
hBS.setParameter("primaryShift", "0 0.04 1.5");
hBS.setParameter("primaryAxis", "1 0 0");
hBS.setParameter("primaryAngles", "-90 90");
hBS.setParameter("secondaryShift", "0 0.175 0");
hBS.setParameter("secondaryAxis", "0 0 1");
hBS.setParameter("secondaryAngles", "-90 90");
hBS.setParameter("facetShift", "0 0.125 0");
hBS.setParameter("facetNormal", "0 1 0");

function makeTower(parent, xSize, ySize, zSize, zWindow)
{
	var wall = 0.2;
	
	n = parent.createNode("North");
	n.setParameter("translation", "0 " + (-wall/2) + " " + (zSize - zWindow)/2);
	n.setParameter("scale", "" + xSize + " " + wall + " " + (zSize - zWindow));
	s = n.createShape();
	s.insertSurface("Cube");
	makeTowerMaterial(s);
	
	n = parent.createNode("South");
	n.setParameter("translation", "0 " + (-ySize + wall/2) + " " + zSize/2);
	n.setParameter("scale", "" + xSize + " " + wall + " " + zSize);
	s = n.createShape();
	s.insertSurface("Cube");
	makeTowerMaterial(s);

	n = parent.createNode("Top");
	n.setParameter("translation", "0 " + (-ySize/2) + " " + (zSize - wall/2));
	n.setParameter("scale", "" + xSize + " " + ySize + " " + wall);
	s = n.createShape();
	s.insertSurface("Cube");
	makeTowerMaterial(s);

	n = parent.createNode("Floor");
	n.setParameter("translation", "0 " + (-ySize/2) + " " + (zSize - zWindow - wall/2));
	n.setParameter("scale", "" + xSize + " " + ySize + " " + wall);
	s = n.createShape();
	s.insertSurface("Cube");
	makeTowerMaterial(s);

	n = parent.createNode("East");
	n.setParameter("translation", "" + (xSize/2 - wall/2) + " " + (-ySize/2) + " " + zSize/2);
	n.setParameter("scale", "" + wall + " " + ySize + " " + zSize);
	s = n.createShape();
	s.insertSurface("Cube");
	makeTowerMaterial(s);

	n = parent.createNode("West");
	n.setParameter("translation", "" - (xSize/2 - wall/2) + " " + (-ySize/2) + " " + zSize/2);
	n.setParameter("scale", "" + wall + " " + ySize + " " + zSize);
	s = n.createShape();
	s.insertSurface("Cube");
	makeTowerMaterial(s);
}

function makeTowerMaterial(shape)
{
	var g = shape.getPart("material");
	g.setParameter("ambientColor", "0.47 0.5 0.47");
	g.setParameter("diffuseColor", "0.45 0.45 0.45");
}

function makeField()
{
	var nodeRoot = new NodeObject;
	nodeRoot.setName("Script");

	var nodeHeliostats = nodeRoot.createNode("HeliostatsA");
	var nMax = fileA.rows();
	for (var n = 1; n < nMax; n++) {
		var data = fileA.array(n); 
		name = data[0];
		position = data[1];
		position = position.split(" ");
		position[2] -= 1.5;
		position = position.join(" "); 
		focus = data[2];
		makeHeliostatA(nodeHeliostats, name, position, vReceiverA, focus);
	}

	nodeHeliostats = nodeRoot.createNode("HeliostatsB");
	nMax = fileB.rows();
	for (var n = 1; n < nMax; n++) {
		var data = fileB.array(n); 
		name = data[0];
		position = data[1]; 
		focus = data[2]; 
		makeHeliostatB(nodeHeliostats, name, position, vReceiverB, focus);
	}
	
	var nT = nodeRoot.createNode("TowerA");
	nT.setParameter("translation", "0 0 0");
	nT.setParameter("rotation", "0 0 1 5");
	makeTower(nT, 6, 6, zReceiverA + 5, 10);

	var nT = nodeRoot.createNode("TowerB");
	nT.setParameter("translation", "8 0 0");
	nT.setParameter("rotation", "0 0 1 5");
	makeTower(nT, 6, 6, zReceiverB + 5, 10);

	var nR = nodeRoot.createNode("ReceiverA");
	nR.setParameter("translation", vReceiverA);
	nR.setParameter("rotation", "-1 0 0 110");
	var n = nR.createNode("Plate");
	n.setParameter("rotation", "0 0 1 180");
	s = n.createShape();
	q = s.insertSurface("Planar");
	p = s.insertProfile("Box");
	p.setParameter("uSize", 5);
	p.setParameter("vSize", 5);
	var g = s.getPart("material");
	g.setParameter("ambientColor", "0.3 0.3 0.3");
	g.setParameter("diffuseColor", "0.1 0.1 0.1");
	g.setParameter("specularColor", "0. 0. 0.");
	g.setParameter("shininess", "0.1");

	var nR = nodeRoot.createNode("ReceiverB");
	nR.setParameter("translation", vReceiverB);
	nR.setParameter("rotation", "-1 0 0 85");
	var n = nR.createNode("Plate");
	n.setParameter("rotation", "0 0 1 180");
	s = n.createShape();
	q = s.insertSurface("Planar");
	p = s.insertProfile("Box");
	p.setParameter("uSize", 5);
	p.setParameter("vSize", 5);
	var g = s.getPart("material");
	g.setParameter("ambientColor", "0.3 0.3 0.3");
	g.setParameter("diffuseColor", "0.1 0.1 0.1");
	g.setParameter("specularColor", "0. 0. 0.");
	g.setParameter("shininess", "0.1");

	tn.InsertScene(nodeRoot);
}

var zReceiverA = 13.8347 + 1.5;
var vReceiverA = "0.0467 -2.0216 " + zReceiverA;
var zReceiverB = zReceiverA;
var vReceiverB = "8.0467 -2.0216 " + zReceiverB;


function pad(n, width, z) {
  z = z || '0';
  n = n + '';
  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
}

if (rays > 0) {// simulation
	for (var i = iterationsA; i < iterationsB; i++) 
	{
	fileB.read("temp/heliostatsB" + i + ".csv");
	tn.Clear();
	makeField();
	
	var scene = tn.getScene();
	var sp = scene.getPart("world.sun.position");
	sp.setParameter("azimuth", 180);
	sp.setParameter("elevation", 70);

	var cm = scene.getPart("world.camera");
	cm.setParameter("position", "-45.1161 -94.4466 91.6898");
	cm.setParameter("rotation", "18.6511 -33.167");

	var tg = scene.getPart("world.terrain.grid");
	tg.setParameter("steps", "5 5 1");
	tg.setParameter("file", "../examples/facilities/Proteas/terrain/terrain.obj");

	var qMax = 20*6*5*1000; // mirrors*area*irradiance
	var etaAverage = 0;
	

	for (var n = weatherA; n < weatherB; n++) {
		var azimuth = fileW.array(n)[1];
		var elevation = fileW.array(n)[2];
		var w = fileW.array(n)[4]/100.;
		
		var sp = tn.getScene().getPart("world.sun.position");
		sp.setParameter("azimuth", azimuth);
		sp.setParameter("elevation", elevation);

		tn.SetRaysNumber(1000);
		tn.SetRaysScreen(1000);
		tn.Run();
		tn.Screenshot("screenshots/" + pad(i, 3) + "-" + pad(n - weather0, 2) + ".png");
	}

	}
}