var heliostatWidth = 2.;
var heliostatHeight = 2.;
var heliostatDistance = Math.sqrt(heliostatWidth*heliostatWidth + heliostatHeight*heliostatHeight); // safety distance between heliostats
var heliostatZ = 1.5; // mirror center

function makeHeliostat(parent, name, position, aiming, focus)
{
	var n = parent.createNode(name);
	n.setParameter("translation", position);

	var t = n.createTracker();
	var tt = t.getPart("target");
	tt.setParameter("aimingPoint", aiming);

	n = n.createNode("primary");
	n = n.createNode("secondary");
	n = n.createNode("facet");
	var s = n.createShape();

	var q = s.insertSurface("Parabolic");
	q.setParameter("fX", focus);
	q.setParameter("fY", focus);

	var p = s.insertProfile("Box");
	p.setParameter("uSize", heliostatWidth);
	p.setParameter("vSize", heliostatHeight);

	var m = s.insertMaterial("Specular");
	m.setParameter("slope", "0.002");
	
	var mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.65 0.72 0.79");
	mG.setParameter("diffuseColor", "0.05 0.05 0.05");
	mG.setParameter("specularColor", "0.3 0.25 0.2");
	mG.setParameter("shininess", "0.5");
}

var receiverZ = 20.;
var receiverDiameter = 2.;
var receierHeight = 3.;

function makeTower(parent)
{
	var receiverRadius = receiverDiameter/2.;
	var baseHeight = receiverZ - receierHeight/2.;
	
	var nodeTower = parent.createNode("Tower");

	var n = nodeTower.createNode("Base");
	n.setParameter("translation", "0 0 " + baseHeight/2.);
	n.setParameter("scale", "" + receiverRadius + " " + receiverRadius + " " + baseHeight);
	var s = n.createShape();
	var q = s.insertSurface("Cylinder");
	var mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.5 0.5 0.5");
	mG.setParameter("diffuseColor", "0.5 0.5 0.5");

	n = nodeTower.createNode("Receiver");
	n.setParameter("translation", "0 0 " + receiverZ);
	n.setParameter("scale", "" + receiverRadius + " " + receiverRadius + " " + receierHeight);
	s = n.createShape();
	q = s.insertSurface("Cylinder");
	mG = s.getPart("material");
	mG.setParameter("emissiveColor", "1 1 1")

	n = nodeTower.createNode("Cap");
	n.setParameter("translation", "0 0 " + (receiverZ + receierHeight/2.));
	s = n.createShape();
	q = s.insertSurface("Planar");
	var p = s.insertProfile("Circular");
	p.setParameter("rMax", receiverRadius);
	mG = s.getPart("material");
	mG.setParameter("ambientColor", "0.5 0.5 0.5");
	mG.setParameter("diffuseColor", "0.2 0.2 0.2");
}

var rhoMin = 0.75*receiverZ; // exclusion radius 
var nR = 10;

var degree = Math.PI/180;
var scale = 1.2;
var sepX = scale*heliostatDistance;
var sepY = scale*heliostatDistance;

function makeField(parent)
{
	var receiverRadius = receiverDiameter/2.;

	nodeHeliostats = parent.createNode("Heliostats");
	count = 1;
	for (i = -nR; i <= nR; i++) {
		var row = i + nR + 1;
		// printTimed("Row " + row);
		nodeTemp = nodeHeliostats.createNode("Row" + row);
		for (j = -nR; j <= nR; j++) {
			name = "H_" + count;
			x = sepX*i;
			y = sepY*j;
			//if (j % 2 == 0) x += sepX/2;
			z = 0.; 
			rho = Math.sqrt(x*x + y*y);
			if (rho < rhoMin) continue;
			position = "" + x + " " + y + " " + z;
			
			xA = x/rho*receiverRadius;
			yA = y/rho*receiverRadius;
			zA = receiverZ;
			aiming = "" + xA + " " + yA + " " + zA;
			focus = Math.sqrt((xA - x)*(xA - x) + (yA - y)*(yA - y) + (zA - z)*(zA - z));
			makeHeliostat(nodeTemp, name, position, aiming, focus);
			count++;
		}
	}
}

var nodeRoot = new NodeObject;
nodeRoot.setName("Script");
makeTower(nodeRoot);
makeField(nodeRoot);

tn.Clear();
tn.InsertScene(nodeRoot);

var scene = tn.getScene();

var sp = scene.getPart("world.sun.position");
sp.setParameter("azimuth", 180);
sp.setParameter("elevation", 60);

var cm = scene.getPart("world.camera");
cm.setParameter("position", "-142.065 -212.839 159.843");
cm.setParameter("rotation", "33.5 -31.5");

var tg = scene.getPart("world.terrain.grid");
tg.setParameter("steps", "10 10 1");
tg.setParameter("min", "-100 -100 0");
tg.setParameter("max", "100 100 0");
